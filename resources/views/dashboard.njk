{% extends 'layout/logged' %}

{% block content %}

  <script src="https://unpkg.com/adonis-websocket-client@1.0.2/dist/ws.js"></script>
  <script src="https://code.highcharts.com/stock/highstock.js"></script>
  <script src="https://code.highcharts.com/stock/modules/exporting.js"></script>

  <div id="container" style="height: 400px; min-width: 310px"></div>

	<script type="text/javascript">

    // io refers to the above import
    const io = ws('http://localhost:3333')
    const client = io.channel('market').connect(function(error, connected) {
      console.log('Connected: ', connected)
      console.log('Error: ', error)
    })
    client.on('message', function(message) {
      console.log('Got message: ', message)
    })
    client.emit('message', 'Some market data...')

    // now, process the seel signals
    // client.on('sell', (data) => {
    //   console.log('Got sell data', data)
    // })

    client.on('buy', (data) => {
      console.log('Got buy data', data)
    })

    Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });

    // Create the chart
    Highcharts.stockChart('container', {
        chart: {
            events: {
                load: function () {

                    // set up the updating of the chart each second
                    var series = this.series[0];
                    client.on('sell', (data) => {
                      console.log('Got sell data:', data)
                      var x = (new Date()).getTime(), // current time
                          y = parseFloat(data.rate); //Math.round(Math.random() * 100);
                      series.addPoint([x, y], true, true);
                    })

                }
            }
        },

        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1M'
            }, {
                count: 5,
                type: 'minute',
                text: '5M'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 0
        },

        title: {
            text: 'Current BTC Ask Price'
        },

        exporting: {
            enabled: false
        },

        yAxis: {
            min: 1000,
            max: 10000,
            startOnTick: true,
            endOnTick: true
        },

        series: [{
            name: 'Initial data',
            data: (function () {
                // generate an array of random data
                var data = [],
                    time = (new Date()).getTime(),
                    i;

                for (i = -10; i <= 0; i += 1) {
                    data.push([
                        time + i * 1000,
                        2000 + Math.round(Math.random() * 200)
                    ]);
                }
                return data;
            }())
        }]
    });
	</script>


{% endblock %}
