{% extends 'layout/puppet' %}

{% block head %}
  <script type="text/javascript" src="https://unpkg.com/vue@latest/dist/vue.js"></script>
  <script type="text/javascript" src="https://unpkg.com/lodash@4.16.0"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

  <!-- Latest compiled and minified JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

{% endblock %}

{% block content %}

  <div class="mar_top10"></div>
  <div id="container" class="col-md-4 col-md-offset-1">
    <h4>Add OrderBook</h4>
    <hr />
    <div id="app">
      <div class="alert alert-success" role="alert" v-show="message">{{ message }}</div>
      <div class="alert alert-danger" role="alert" v-show="error">{{ error }}</div>
      <form class="form-horizontal" method="post" v-on:submit.prevent="addOrderBook">
        <div class="form-group">
          <label for="asset">Asset</label>
          <select name="asset" class="form-control" v-model="newOrder.asset">
            <option value="BTC">BTC</option>
            <option value="ETH">ETH</option>
            <option value="TRC">TRC</option>
          </select>
        </div>
        <div class="form-group">
          <label for="asset">To Asset</label>
          <select name="asset" class="form-control" v-model="newOrder.to_asset">
            <option value="BTC">BTC</option>
            <option value="ETH">ETH</option>
            <option value="TRC">TRC</option>
          </select>
        </div>
        <div class="form-group">
          <label for="amount">Amount</label>
          <input type="text" class="form-control" name="amount" placeholder="Enter amount" v-model="newOrder.amount">
        </div>
        <div class="form-group">
          <label for="price">Price</label>
          <input type="text" class="form-control" name="price" v-model="newOrder.price">
        </div>
        <div class="form-group">
          <label for="type">Type</label>
          <div class="">
            <div class="radio">
              <label>
                <input type="radio" name="type" value="BID" v-model="newOrder.type" checked>Bid&nbsp;&nbsp;&nbsp;
              </label>
              <label>
                <input type="radio" name="type" value="ASK" v-model="newOrder.type">Ask
              </label>
            </div>
          </div>
        </div>
        <hr/>
        <div class="form-group">
          <button type="submit" class="btn btn-primary">Add Order</button>
        </div>
      </form>
    </div>
  </div>
  <div id="container" class="col-md-4 col-md-offset-1">
    <h4>Results</h4>
    <table class="table">
      <thead>
        <tr>
          <th>#</th>
          <th>Type</th>
        </tr>
      </thead>
      <tbody>
      <template v-for="ob in orders">
        <tr>
          <td>{{ ob.id }}</td>
          <td>{{ ob.type }}</td>
        </tr>
      </template>
      </tbody>
    </table>
  </div>
  <div class="mar_top10"></div>


  <script type="text/javascript">
    const URL = '/api/v1/orderbook'
    new Vue({
      el: '#app',
      data: {
        error: 'Opps!',
        message: 'Hello',
        orders: null,
        newOrder: {
          asset: '',
          to_asset: '',
          amount: '',
          price: '',
          type: ''
        }
      },
      created: function () {
        this.fetchOrderBook()
      },
      computed: {
        hasError: function () {
          this.error !== null
        }
        // compiledMarkdown: function () {
        //   return marked(this.input, { sanitize: true })
        // }
      },
      methods: {
        fetchOrderBook: function () {
          const xhr = new XMLHttpRequest()
          const self = this
          xhr.open('GET', URL)
          xhr.onload = function () {
            self.orders = JSON.parse(xhr.responseText)
            console.log('response:', self.orders)
          }
          xhr.send()
        },
        addOrderBook: function () {
          console.log('Adding new order: {',
            'asset=', this.newOrder.asset,
            ', to_asset=', this.newOrder.to_asset,
            ', amount=', this.newOrder.amount,
            ', price=', this.newOrder.price,
            '}')

          const xhr = new XMLHttpRequest()
          xhr.open('POST', URL, true)
          xhr.setRequestHeader('Content-type', 'application/json');
          xhr.onload = function () {
            console.log(xhr.responseText)
          }
          xhr.send(JSON.stringify(this.newOrder))
        }
      }
    })
  </script>

{% endblock %}

